options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
f = args[1]
sample = strsplit(strsplit(f, 'summary_files/', fixed = T)[[1]][2], '_')[[1]][1]
f = '~/Google Drive/EOGC_Nitration/summary_files/N155T156_Nitration_in_Global.xlsx'
f = args[1]
sample = strsplit(strsplit(f, 'summary_files/', fixed = T)[[1]][2], '_')[[1]][1]
f = '~/Google Drive/EOGC_Nitration/summary_files/N155T156_Nitration_in_Global.xlsx'
sample = strsplit(strsplit(f, 'summary_files/', fixed = T)[[1]][2], '_')[[1]][1]
e = as.data.frame(read_excel(f, sheet='Peptide View'))
f = '~/GoogleDrive/EOGC_Nitration/summary_files/N155T156_Nitration_in_Global.xlsx'
e = as.data.frame(read_excel(f, sheet='Peptide View'))
f = args[1]
options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
# load data
f = '~/Google Drive/EOGC_Nitration/summary_files_201912/N13T236_Nitration_in_Global.xlsx'
# f = args[1]
sample = strsplit(strsplit(f, 'summary_files/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
# Proteomics data
options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
# load data
f = '~/Google Drive/EOGC_Nitration/summary_files_201912/N13T236_Nitration_in_Global.xlsx'
# f = args[1]
sample = strsplit(strsplit(f, 'summary_files/', fixed = T)[[1]][2], '_')[[1]][1]
# Proteomics data
options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
# load data
f = '~/Google Drive/EOGC_Nitration/summary_files_201912/N13T236_Nitration_in_Global.xlsx'
# f = args[1]
sample = strsplit(strsplit(f, 'summary_files_201912/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
# Proteomics data
options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
# load data
f = '~/GoogleDrive/EOGC_Nitration/summary_files_201912/N13T236_Nitration_in_Global.xlsx'
# f = args[1]
sample = strsplit(strsplit(f, 'summary_files_201912/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
# load data
f = '~/GoogleDrive/EOGC_Nitration/summary_files_201912/N13T236_Global_nitration.xlsx'
# f = args[1]
sample = strsplit(strsplit(f, 'summary_files_201912/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
View(e)
View(e)
## Parse nitrated peptides
e$isY45 <- ifelse(grepl('Y[45]', e$Sequence, fixed = T), 1, 0)
e$isC29 <- ifelse(grepl('C[29]', e$Sequence, fixed = T), 1, 0)
e$isNitrated <- ifelse(e$isC29==1 | e$isY45 == 1, 1, 0)
View(e)
e$isNitrated
table(e$isNitrated)
e$Sequence2 <- gsub("[^a-zA-Z]", "", e$Sequence)
e$norm1 <- log2(e$norm1 + 1)
e$norm2 <- log2(e$norm2 + 1)
e$tumor1 <- log2(e$tumor1 + 1)
e$tumor2 <- log2(e$tumor2 + 1)
e$pid <- paste('p', seq(1,nrow(e)), sep='')
View(e)
View(e)
View(e)
e1 <- e %>% filter(isNitrated == '1')
library(tidyverse)
e1 <- e %>% filter(isNitrated == '1')
View(e1)
View(e)
pull(nrow(e))
nrow(e)
s
as.data.frame(nrow(e), row.names = sample)
as.data.frame(nrow(e), column.names = sample)
t <- as.data.frame(nrow(e), column.names = sample)
write.csv(e, file = "sample", col.names = T)
View(t)
t <- as.data.frame(nrow(e), column.names = sample)
View(t)
write.csv(t, file = "sample", col.names = T)
t %>% rename("nrow(e)" = sample)
class(sample)
t %>% rename(sample = "nrow(e)")
write.csv(t, file = "sample", col.names = T)
write.csv(t, file = sample, col.names = T)
View(t)
rename(t, sample = "nrow(e)")
View(t)
t <- rename(t, sample = "nrow(e)")
View(t)
t <- t %>% rename(sample = "nrow(e)")
View(t)
t <- rename(t, sample = "nrow(e)")
t <- as.data.frame(nrow(e))
t <- rename(t, sample = "nrow(e)")
View(t)
names(t[,1]) <- sample
View(t)
t <- as.data.frame(nrow(e))
View(t)
names(t[,1]) <- sample
names(t[,1]) <- sample
names(t) <- sample
View(t)
t <- as.data.frame(nrow(e))
names(t) <- sample
write.csv(t, file = sample, col.names = T)
t <- as.data.frame(c(sample,nrow(e)))
View(t)
t <- as.data.frame(nrow(e)))
View(t)
t <- as.data.frame(nrow(e))
View(t)
t <- as.data.frame(nrow(e))
t$name <- sample
View(t)
t <- as.data.frame(nrow(e))
t$sample <- sample
names(t) <- "peptide_size"
View(t)
t <- as.data.frame(nrow(e))
t$name <- sample
names(t) <- "peptide_size"
View(t)
t <- as.data.frame(nrow(e))
t$name <- sample
names(t) <-c("peptide_size", "sample")
t <- as.data.frame(nrow(e))
t$name <- sample
names(t) <- c("peptide_size", "sample")
write.csv(t, file = sample, col.names = T)
# Proteomics data_peptide size
options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
# load data
f = '~/GoogleDrive/EOGC_Nitration/summary_files_201912/N13T236_Global_nitration.xlsx'
# f = args[1]
sample = strsplit(strsplit(f, 'summary_files_201912/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
## Parse nitrated peptides
e$isY45 <- ifelse(grepl('Y[45]', e$Sequence, fixed = T), 1, 0)
e$isC29 <- ifelse(grepl('C[29]', e$Sequence, fixed = T), 1, 0)
e$isNitrated <- ifelse(e$isC29==1 | e$isY45 == 1, 1, 0)
## Remove peptides with missing expression
e = e[!(e$norm1==0 | e$norm2==0 | e$tumor1==0 | e$tumor2==0),]
#sort out only nitrated ones
library(tidyverse)
e1 <- e %>% filter(isNitrated == '1')
# pull the number of rows as data frame
t <- as.data.frame(nrow(e))
t$name <- sample
names(t) <- c("peptide_size", "sample")
write.csv(t, file = sample, col.names = T)
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
e = e[!(e$norm1==0 | e$norm2==0 | e$tumor1==0 | e$tumor2==0),]
t <- as.data.frame(nrow(e))
t$name <- sample
names(t) <- c("peptide_size", "sample")
write.csv(t, file = sample, col.names = T)
# Proteomics data_peptide size
options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
# load data
f = '~/GoogleDrive/EOGC_Nitration/summary_files_201912/N13T236_Global_nitration.xlsx'
f = args[1]
sample = strsplit(strsplit(f, 'summary_files_201912/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
## Parse nitrated peptides
e$isY45 <- ifelse(grepl('Y[45]', e$Sequence, fixed = T), 1, 0)
e$isC29 <- ifelse(grepl('C[29]', e$Sequence, fixed = T), 1, 0)
e$isNitrated <- ifelse(e$isC29==1 | e$isY45 == 1, 1, 0)
## Remove peptides with missing expression
e = e[!(e$norm1==0 | e$norm2==0 | e$tumor1==0 | e$tumor2==0),]
#sort out only nitrated ones
library(tidyverse)
e1 <- e %>% filter(isNitrated == '1')
# pull the number of rows as data frame
t <- as.data.frame(nrow(e))
t$name <- sample
names(t) <- c("peptide_size", "sample")
View(t)
library(tidyverse)
e1 <- e %>% filter(isNitrated == '1')
t <- as.data.frame(nrow(e1))
t$name <- sample
names(t) <- c("peptide_size", "sample")
View(t)
options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
# load data
f = '~/GoogleDrive/EOGC_Nitration/summary_files_201912/N13T236_Global_nitration.xlsx'
# f = args[1]
sample = strsplit(strsplit(f, 'summary_files_201912/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
## Remove peptides with missing expression
e = e[!(e$norm1==0 | e$norm2==0 | e$tumor1==0 | e$tumor2==0),]
# pull the number of rows as data frame
t <- as.data.frame(nrow(e))
t$name <- sample
names(t) <- c("peptide_size", "sample")
t_out = paste('Tables/table.peptide_size', sample, 'txt', sep='.')
write.table(t, t_out, sep='\t', quote = F, row.names = F, col.names = T)
View(e1)
Proteomics data_peptide size
options(stringsAsFactors = F)
args = commandArgs(trailingOnly=TRUE)
library(readxl)
# load data
f = '~/GoogleDrive/EOGC_Nitration/summary_files_201912/N13T236_Global_nitration.xlsx'
f = args[1]
sample = strsplit(strsplit(f, 'summary_files_201912/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
## Parse nitrated peptides
e$isY45 <- ifelse(grepl('Y[45]', e$Sequence, fixed = T), 1, 0)
e$isC29 <- ifelse(grepl('C[29]', e$Sequence, fixed = T), 1, 0)
e$isNitrated <- ifelse(e$isC29==1 | e$isY45 == 1, 1, 0)
## Remove peptides with missing expression
e = e[!(e$norm1==0 | e$norm2==0 | e$tumor1==0 | e$tumor2==0),]
#sort out only nitrated ones
library(tidyverse)
e1 <- e %>% filter(isNitrated == '1')
# pull the number of rows as data frame
t <- as.data.frame(nrow(e1))
t$name <- sample
names(t) <- c("peptide_size", "sample")
t_out = paste('Tables/table.peptide_size', sample, 'txt', sep='.')
write.table(t, t_out, sep='\t', quote = F, row.names = F, col.names = T)
f = '~/GoogleDrive/EOGC_Nitration/summary_files_201912/N13T236_Global_nitration.xlsx'
# f = args[1]
sample = strsplit(strsplit(f, 'summary_files_201912/', fixed = T)[[1]][2], '_')[[1]][1]
## Load data
e = as.data.frame(read_excel(f, sheet='Peptide View'))
samples = c('norm1', 'tumor1', 'norm2', 'tumor2')
colnames(e)[5:8] <- samples
## Parse nitrated peptides
e$isY45 <- ifelse(grepl('Y[45]', e$Sequence, fixed = T), 1, 0)
e$isC29 <- ifelse(grepl('C[29]', e$Sequence, fixed = T), 1, 0)
e$isNitrated <- ifelse(e$isC29==1 | e$isY45 == 1, 1, 0)
## Remove peptides with missing expression
e = e[!(e$norm1==0 | e$norm2==0 | e$tumor1==0 | e$tumor2==0),]
#sort out only nitrated ones
library(tidyverse)
e1 <- e %>% filter(isNitrated == '1')
# pull the number of rows as data frame
t <- as.data.frame(nrow(e1))
t$name <- sample
names(t) <- c("peptide_size", "sample")
t_out = paste('Tables/table.peptide_size', sample, 'txt', sep='.')
write.table(t, t_out, sep='\t', quote = F, row.names = F, col.names = T)
write.csv(t, t_out, sep='\t', quote = F, row.names = F, col.names = T)
View(t)
t_out = paste('~/Tables/table.peptide_size', sample, 'txt', sep='.')
write.table(t, t_out, sep='\t', quote = F, row.names = F, col.names = T)
t_out = paste('~/GoogleDrive/gastric_cancer_samples/Tables/table.peptide_size', sample, 'txt', sep='.')
write.table(t, t_out, sep='\t', quote = F, row.names = F, col.names = T)
